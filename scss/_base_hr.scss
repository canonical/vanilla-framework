@import 'settings';

// Horizontal rule
@mixin vf-b-hr {
  hr {
    border: 0;
    height: 1px;
    margin-bottom: calc(#{$spv-inner--scaleable} - 1px);
    margin-top: 0;
    position: relative;
    width: 100%;

    & + p {
      margin-top: -$sp-unit;
    }
  }

  // Theming
  @if (map-get($theme-default--dark, hr) == true) {
    hr {
      @extend %hr--dark-theme;
    }

    // sass-lint:disable no-qualifying-elements
    hr.is-light {
      @extend %hr--light-theme;
    }
  } @else {
    hr {
      @extend %hr--light-theme;
    }

    // sass-lint:disable no-qualifying-elements
    hr.is-dark {
      @extend %hr--dark-theme;
    }
  }

  %hr--dark-theme {
    background: $colors--dark-theme--border-default;
  }

  %hr--light-theme {
    background: $colors--light-theme--border-default;
  }

  .row.is-bordered {
    position: relative;

    &::before {
      background: $color-mid-light;
      content: '';
      height: 1px;
      margin-bottom: calc(#{$spv-inner--scaleable} - 1px);
      position: absolute;

      @media (max-width: $threshold-4-6-col) {
        left: map-get($grid-margin-widths, small);
        right: map-get($grid-margin-widths, small);
      }

      @media (min-width: $threshold-4-6-col) and (max-width: $threshold-6-12-col) {
        left: map-get($grid-margin-widths, medium);
        right: map-get($grid-margin-widths, medium);
      }

      @media (min-width: $threshold-6-12-col) {
        left: map-get($grid-margin-widths, large);
        right: map-get($grid-margin-widths, large);
      }
    }
  }
}
