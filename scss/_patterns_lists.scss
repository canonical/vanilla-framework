@import 'settings';
$tick-height: 0.875rem; // 14px value from svg as rem so it can be used in calculations
$spv-list-item--inner: 0.25 * $spv-inter--condensed-scaleable; // padding top and bottom for lists containing loose text.

// Default list styling
// Mixin for basic styled lists
@mixin vf-list {
  list-style: none;
  margin-left: 0;
  padding-left: 0;

  // Mixin for list items
  %vf-list-item {
    @if ($pad-lists) {
      padding-bottom: $spv-list-item--inner;
      padding-top: $spv-list-item--inner;
    }

    form & {
      padding-bottom: 0;
      padding-top: 0;

      label {
        margin-bottom: $spv-nudge-compensation;
      }
    }
  }
}

@mixin vf-list-item-divided {
  position: relative;

  &::after {
    border-bottom: 1px solid $color-mid-light;
    bottom: 0;
    content: '';
    height: 1px;
    left: 0;
    position: absolute;
    right: 0;
  }

  &:last-of-type,
  .last-item {
    &::after {
      border-bottom: 0;
    }
  }
}

// Mixin for inline list items
@mixin vf-inline-list-item {
  display: inline;
  list-style: none;
  margin-right: 1.25rem;

  &:last-of-type,
  .last-item {
    margin-right: 0;
  }
}

@function svg-tick($color) {
  @if type-of($color) != 'color' {
    @warn '#{$color} is not a color.';
    @return false;
  }
  @return url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 14 14'%3E%3Ccircle fill='"+vf-url-friendly-color($color)+"' cx='7' cy='7' r='7'/%3E%3Cpath fill='%23fff' d='M6.1 10.813L2.41 8.105l1.184-1.613L5.9 8.187l4.393-4.394 1.414 1.414z' /%3E%3C/svg%3E");
}

// List styling using list class
@mixin vf-p-list {
  .p-list {
    @extend %vf-clearfix;
    @include vf-list;

    &__item {
      @extend %vf-list-item;
    }
  }
}

// A list with separators between items
@mixin vf-p-list-divided {
  .p-list--divided {
    @include vf-list;

    .p-list__item {
      @extend %vf-list-item;
      @include vf-list-item-divided;
    }

    &.is-split .p-list__item:last-of-type {
      border-bottom: 1px solid $color-mid-light;
    }
  }
}

// Displays item with a tick bullet
@mixin vf-p-list-item-state {
  $bg-pos-y: if($pad-lists, $spv-list-item--inner + (map-get($line-heights, default-text) - $tick-height) * 0.5, (map-get($line-heights, default-text) - $tick-height) * 0.5);

  .is-ticked {
    background-image: svg-tick($color-accent);
    background-position-y: $bg-pos-y;
    background-repeat: no-repeat;
    padding-left: 2rem;
  }
}

// Displays a list inline with spacing
@mixin vf-p-inline-list {
  .p-inline-list {
    margin-left: 0;
    padding-left: 0;

    &__item {
      @include vf-inline-list-item;
    }
  }
}

// Displays a list inline with items separated by dots
@mixin vf-p-inline-list-middot {
  .p-inline-list--middot {
    margin-left: 0;
    padding-left: 0;

    .p-inline-list__item {
      @include vf-inline-list-item;
      margin-right: 1.25em;
      position: relative;

      &::after {
        color: $color-mid-dark;
        content: '\00b7';
        font-size: 1.4em;
        line-height: 0;
        position: absolute;
        right: -0.5em;
        top: 0.4em;
      }

      &:hover::after {
        color: $color-mid-dark;
      }

      &:last-of-type,
      .last-item {
        &::after {
          content: '';
        }
      }
    }
  }
}

// Displays a step by step list of instructions
@mixin vf-p-stepped-list {
  .p-stepped-list {
    @extend %vf-clearfix;
    @extend %numbered-step-container;

    &__item {
      // override unecessary col-8 class in markup; layout is handled with css below
      float: none;
      margin-left: 0;
      position: relative;
      width: 100%;
    }

    &__content {
      margin-top: -#{$sp-unit * 2};
    }

    &__bullet {
      display: none;
    }
  }
}

.p-stepped-list__title {
  @extend %numbered-step-title;
}

// Bullet sizes for each heading level
@for $i from 6 through 1 {
  $bullet-width: map-get($line-heights, default-text);
  $bullet-width-mobile: map-get($line-heights, default-text);

  @if $i < 5 {
    $bullet-width: map-get($line-heights, h#{$i});
    $bullet-width-mobile: map-get($line-heights, h#{$i}-mobile);
  }

  h#{$i}.p-stepped-list__title {
    // sass-lint:disable-line no-qualifying-elements
    margin-left: $bullet-width + $sph-intra;
    @media (max-width: $breakpoint-medium) {
      margin-left: $bullet-width-mobile + $sph-intra;
    }

    &::before {
      width: $bullet-width;

      @media (max-width: $breakpoint-medium) {
        width: $bullet-width-mobile;
      }
    }
  }
}

@mixin vf-p-stepped-list-detailed {
  .p-stepped-list--detailed {
    @extend %vf-clearfix;
    @extend %numbered-step-container;

    @media (min-width: $breakpoint-medium) {
      .p-stepped-list {
        &__content {
          margin-top: 0;
        }

        &__item {
          display: flex;
          margin: 0;

          > :nth-child(2n) {
            @include column(6, $grid-columns);
            position: static;
          }

          > :nth-child(2n + 1) {
            @include column(6, $grid-columns, true);
            position: static;
          }
        }
      }
    }
  }
}

// Adaptor class `is-split` to split the items of a list into two columns
@mixin vf-p-list-split {
  [class*='p-list'].is-split {
    @media (min-width: $breakpoint-medium) {
      @supports (columns: 1) {
        column-gap: $sp-x-large;
        columns: 2;

        .p-list__item {
          display: inline-block;
          width: 100%;
        }
      }

      @supports not (columns: 1) {
        display: flex;
        flex-wrap: wrap;

        .p-list__item {
          width: calc(50% - 0.5rem);
        }
      }

      &:nth-child(2n-1) {
        margin-right: $sp-medium;
      }
    }
  }
}

@mixin vf-p-lists {
  %numbered-step-container {
    counter-reset: li;
    list-style: none;
    padding-left: 0;
  }

  %numbered-step-title {
    &::before {
      background-color: $color-mid-dark;
      border-radius: 100%;
      color: $color-x-light;
      content: counter(li);
      counter-increment: li;
      direction: rtl;
      display: inline-block;
      left: 0;
      padding: 0;
      position: absolute;
      text-align: center;
    }
  }
  @include vf-p-list;
  @include vf-p-list-divided;
  @include vf-p-list-item-state;
  @include vf-p-inline-list;
  @include vf-p-inline-list-middot;
  @include vf-p-stepped-list;
  @include vf-p-stepped-list-detailed;
  @include vf-p-list-split;
}
