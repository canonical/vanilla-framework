@import 'settings';
$tick-height: 0.875rem; // 14px value from svg as rem so it can be used in calculations
$spv-list-item--inner: 0.25 * $spv-outer--small-scaleable; // padding top and bottom for lists containing loose text.

// Default list styling
// Mixin for basic styled lists
@mixin vf-list {
  list-style: none;
  margin-left: 0;
  padding-left: 0;

  // Mixin for list items
  %vf-list-item {
    @if ($pad-lists) {
      padding-bottom: $spv-list-item--inner;
      padding-top: $spv-list-item--inner;
    }

    form & {
      padding-bottom: 0;
      padding-top: 0;

      label {
        margin-bottom: $spv-nudge-compensation;
      }
    }
  }
}

@mixin vf-list-item-divided {
  position: relative;

  &::after {
    border-bottom: 1px solid $color-mid-light;
    bottom: 0;
    content: '';
    height: 1px;
    left: 0;
    position: absolute;
    right: 0;
  }

  &:last-of-type,
  .last-item {
    &::after {
      border-bottom: 0;
    }
  }
}

// Mixin for inline list items
@mixin vf-inline-list-item {
  display: inline;
  list-style: none;
  margin-right: 1.25rem;

  &:last-of-type,
  .last-item {
    margin-right: 0;
  }
}

@function svg-tick($color) {
  @if type-of($color) != 'color' {
    @warn '#{$color} is not a color.';
    @return false;
  }
  @return url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='14' viewBox='0 0 14 14'%3E%3Ccircle fill='"+vf-url-friendly-color($color)+"' cx='7' cy='7' r='7'/%3E%3Cpath fill='%23fff' d='M6.1 10.813L2.41 8.105l1.184-1.613L5.9 8.187l4.393-4.394 1.414 1.414z' /%3E%3C/svg%3E");
}

// List styling using list class
@mixin vf-p-list {
  .p-list {
    @extend %vf-clearfix;
    @include vf-list;

    &__item {
      @extend %vf-list-item;
    }
  }
}

// A list with separators between items
@mixin vf-p-list-divided {
  .p-list--divided {
    @include vf-list;

    .p-list__item {
      @extend %vf-list-item;
      @include vf-list-item-divided;
    }

    &.is-split .p-list__item:last-of-type {
      border-bottom: 1px solid $color-mid-light;
    }
  }
}

// Displays item with a tick bullet
@mixin vf-p-list-item-state {
  .is-ticked {
    background-image: svg-tick($color-accent);
    background-position-y: $spv-list-item--inner + map-get($nudges, nudge--p);
    background-repeat: no-repeat;
    background-size: $tick-height;
    padding-left: 2rem;
  }
}

// Displays a list inline with spacing
@mixin vf-p-inline-list {
  .p-inline-list {
    margin-left: 0;
    padding-left: 0;
  }

  .p-inline-list__item {
    @include vf-inline-list-item;
  }
}

// Displays a list inline with items separated by dots
@mixin vf-p-inline-list-middot {
  .p-inline-list--middot {
    margin-left: 0;
    padding-left: 0;

    .p-inline-list__item {
      @include vf-inline-list-item;
      margin-right: 1.25em;
      position: relative;

      &::after {
        color: $color-mid-dark;
        content: '\00b7';
        font-size: 1.4em;
        line-height: 0;
        position: absolute;
        right: -0.5em;
        top: 0.4em;
      }

      &:hover::after {
        color: $color-mid-dark;
      }

      &:last-of-type,
      .last-item {
        &::after {
          content: '';
        }
      }
    }
  }
}

// Displays a step by step list of instructions
@mixin vf-p-stepped-list {
  .p-stepped-list {
    @extend %vf-clearfix;
    @extend %numbered-step-container;

    margin-bottom: 0; // spacing has been moved onto __item; this ensures that the heading / paragraph spacing matches that of regular headings / paragraphs
  }

  .p-stepped-list__item {
    // override unecessary col-8 class in markup; layout is handled with css below
    float: none;
    margin-left: 0;
    overflow: visible;
    padding-bottom: map-get($sp-before, h3);
    position: relative;
    width: 100%;
  }

  .p-stepped-list__bullet {
    display: none;
  }
}

.p-stepped-list__title {
  @extend %numbered-step-title;
}

@for $i from 6 through 1 {
  // Bullet sizes for each heading level
  $bullet-width: map-get($line-heights, default-text);
  $bullet-width-mobile: map-get($line-heights, default-text);

  @if $i < 5 {
    $bullet-width: map-get($line-heights, h#{$i});
    $bullet-width-mobile: map-get($line-heights, h#{$i}-mobile);
  }

  // sass-lint:disable no-qualifying-elements
  h#{$i}.p-stepped-list__title {
    // sass-lint:enable no-qualifying-elements
    &::before {
      margin-right: $sph-inner;

      @media (max-width: $breakpoint-heading-threshold) {
        width: $bullet-width-mobile;
      }

      @media (min-width: $breakpoint-heading-threshold) {
        width: $bullet-width;
      }
    }
  }
}

@mixin vf-p-stepped-list-detailed {
  .p-stepped-list--detailed {
    // $bullet-offset:
    @extend %numbered-step-container;

    margin-left: auto;

    .p-stepped-list__content {
      @media (min-width: $threshold-6-12-col) {
        grid-column-end: span 6;
        margin-top: 0;
      }
    }

    .p-stepped-list__title {
      display: flex;
      grid-column-end: span 6;
      margin-left: 0;
    }

    .p-stepped-list__item {
      @extend %row;

      .row & {
        @include row-reset;
      }
    }
  }
}

// Adaptor class `is-split` to split the items of a list into two columns
@mixin vf-p-list-split {
  [class*='p-list'].is-split {
    @media (min-width: $breakpoint-medium) {
      // sass-lint:disable no-vendor-prefixes property-sort-order
      @supports ((-webkit-columns: 1) or (columns: 1)) {
        column-gap: $sp-x-large;
        columns: 2;

        // sass-lint:enable no-vendor-prefixes property-sort-order
        .p-list__item {
          display: inline-block;
          width: 100%;
        }
      }

      // sass-lint:disable no-vendor-prefixes property-sort-order
      @supports not ((-webkit-columns: 1) or (columns: 1)) {
        display: flex;
        flex-wrap: wrap;

        .p-list__item {
          width: calc(50% - 0.5rem);
        }
        // sass-lint:enable no-vendor-prefixes property-sort-order
      }

      &:nth-child(2n-1) {
        margin-right: $sp-medium;
      }
    }
  }
}

@mixin vf-p-lists {
  %numbered-step-container {
    counter-reset: li;
    display: flex;
    flex-direction: column;
    list-style: none;
    padding-left: 0;
  }

  %numbered-step-title {
    display: flex;

    &::before {
      align-self: start;
      background-color: $color-mid-x-light;
      border-radius: 100%;
      content: counter(li);
      counter-increment: li;
      direction: rtl;
      display: block;
      text-align: center;
    }
  }
  @include vf-p-list;
  @include vf-p-list-divided;
  @include vf-p-list-item-state;
  @include vf-p-inline-list;
  @include vf-p-inline-list-middot;
  @include vf-p-stepped-list;
  @include vf-p-stepped-list-detailed;
  @include vf-p-list-split;
}
