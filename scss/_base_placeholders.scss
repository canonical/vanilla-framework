@import 'settings';
@import 'base_typography-definitions';

// Placeholders containing used rules in multiple base components and patterns
// Default settings can be found in _settings_placeholders
@mixin vf-b-placeholders {
  @include vf-b-typography-definitions;

  // Styling
  %vf-has-round-corners {
    border-radius: $border-radius;
  }

  %vf-has-box-shadow {
    box-shadow: $box-shadow;
  }

  %vf-is-bordered {
    border: $border;
  }

  %vf-bg--light {
    background-color: $color-light;
    color: $color-dark;
  }

  %vf-bg--x-light {
    background-color: $color-x-light;
    color: $color-dark;
  }

  %vf-card {
    @extend %vf-bg--x-light;
    margin-bottom: $spv-outer--scaleable;
    overflow: auto; // prevent overflow of child margins
    padding: $spv-inner--large;
  }

  //accordion, table
  %single-border-text-vpadding--scaling {
    padding-bottom: $table-cell-vertical-padding;
    padding-top: calc(#{$table-cell-vertical-padding} - 1px);
  }

  // Bars and borders
  %vf-pseudo-border {
    background-color: $color-mid-light;
    content: '';
    height: 1px;
    left: 0;
    position: absolute;
    right: 0;
  }

  %vf-pseudo-border--bottom {
    &::after {
      @extend %vf-pseudo-border;
      bottom: 0;
    }
  }

  %vf-pseudo-border--top {
    &::after {
      @extend %vf-pseudo-border;
      top: 0;
    }
  }

  // Utilities
  %vf-hide-text {
    overflow: hidden;
    // rem value necessary because text indent in % does not work with padding;
    // 10rem is larger than any padding value on an element you'd hide text in (buttons, icons)
    // but still smaller than 9999px so should have better performance
    text-indent: calc(100% + 10rem);
    white-space: nowrap;
  }

  %vf-clearfix::after {
    clear: both;
    content: '';
    display: block;
  }

  %u-no-margin--bottom {
    &:not(h1):not(h2):not(h3):not(h4):not(h5):not(h6):not(p):not(small):not([class*='p-heading']) {
      margin-bottom: 0 !important;
    }
  }

  %u-no-margin--bottom--h1 {
    @media (max-width: $breakpoint-heading-threshold) {
      margin-bottom: -#{map-get($nudges, nudge--h1-mobile)} !important;
    }

    @media (min-width: $breakpoint-heading-threshold) {
      margin-bottom: -#{map-get($nudges, nudge--h1)} !important;
    }

    @if ($increase-font-size-on-larger-screens) {
      @media (min-width: $breakpoint-x-large) {
        margin-bottom: -#{map-get($nudges, nudge--h1-large)} !important;
      }
    }
  }

  %u-no-margin--bottom--h2 {
    @media (max-width: $breakpoint-heading-threshold) {
      margin-bottom: -#{map-get($nudges, nudge--h2-mobile)} !important;
    }

    @media (min-width: $breakpoint-heading-threshold) {
      margin-bottom: -#{map-get($nudges, nudge--h2)} !important;
    }
  }

  %u-no-margin--bottom--h3 {
    @media (max-width: $breakpoint-heading-threshold) {
      margin-bottom: #{$sp-unit - map-get($nudges, nudge--h3-mobile)} !important;
    }

    @media (min-width: $breakpoint-heading-threshold) {
      margin-bottom: -#{map-get($nudges, nudge--h3)} !important;
    }
  }

  %u-no-margin--bottom--h4 {
    @media (max-width: $breakpoint-heading-threshold) {
      margin-bottom: #{$sp-unit - map-get($nudges, nudge--h4-mobile)} !important;
    }

    @media (min-width: $breakpoint-heading-threshold) {
      margin-bottom: -#{map-get($nudges, nudge--h4)} !important;
    }

    @if ($increase-font-size-on-larger-screens) {
      @media (min-width: $breakpoint-x-large) {
        margin-bottom: -#{map-get($nudges, nudge--h4-large)} !important;
      }
    }
  }

  %u-no-margin--bottom--default-text {
    margin-bottom: #{$sp-unit - map-get($nudges, nudge--p)} !important;
  }

  %u-no-margin--bottom--small {
    margin-bottom: -#{map-get($nudges, nudge--small)} !important;
  }
}
