@import 'settings';

$nav-border-bottom-thickness: 1px;

@mixin vf-p-navigation {
  // no colours
  .p-navigation {
    display: flex;
    flex-shrink: 0;
    position: relative;
    z-index: 10;

    @media (max-width: $breakpoint-navigation-threshold) {
      flex-direction: column;
    }

    &__banner {
      display: flex;
      flex: 0 0 auto;
      justify-content: space-between;
    }

    &__image {
      align-self: center;
      max-height: 2rem;
      min-height: 1.5rem;
    }

    &__link {
      @media (min-width: $breakpoint-navigation-threshold) {
        $nav-link-max-width: 20em !default;
        max-width: $nav-link-max-width;
      }

      & > a {
        @include vf-animation;
        display: block;
        line-height: map-get($line-heights, default-text);
        margin-bottom: 0;
        overflow: hidden;
        position: relative;
        text-overflow: ellipsis;
        white-space: nowrap;

        @media (max-width: $breakpoint-navigation-threshold) {
          padding: $spv-inner--medium 0;

          &::before {
            top: 0;
          }
        }

        @media (min-width: $breakpoint-navigation-threshold) {
          padding: $spv-inner--medium $sph-inner;

          &::before {
            bottom: 0;
          }
        }

        &::before {
          content: '';
          height: $nav-border-bottom-thickness;
          left: 0;
          position: absolute;
          right: 0;
        }

        &,
        &:visited,
        &:focus,
        &:hover {
          text-decoration: none;
        }
      }
    }

    &__links {
      list-style: none;
      margin: 0;
      padding: 0;
      @media (max-width: $breakpoint-navigation-threshold) {
        margin-top: -1px; // prevents bottom border of nav from moving 1px
      }
      @media (min-width: $breakpoint-navigation-threshold) {
        display: flex;
        flex-wrap: wrap;
      }
    }

    &__logo {
      display: flex;
      flex: 0 0 auto;
      height: 3rem;
      margin: 0 $sph-inner 0 0;

      .p-navigation__link {
        display: flex;
      }
    }

    &__nav {
      display: none;

      @media (max-width: $breakpoint-navigation-threshold) {
        flex-direction: column;
      }

      @media (min-width: $breakpoint-navigation-threshold) {
        display: flex;
        justify-content: space-between;
        width: 100%;
      }
    }

    .p-search-box {
      min-width: 10em;

      @media (max-width: $breakpoint-navigation-threshold) {
        flex: 1 0 auto;
        margin: -1px 0 $spv-inner--small 0;
        order: -1;
      }

      @media (min-width: $breakpoint-navigation-threshold) {
        // align baselines of menu items and input text
        $input-gap-top: $spv-inner--medium - $spv-nudge;
        display: flex;
        flex: 1 1 auto;
        margin: $input-gap-top 0 auto auto;
        max-width: 20rem;
        order: 1;
      }
    }

    %navigation-row {
      @extend %fixed-width-container;
      display: flex;

      @media (max-width: $breakpoint-navigation-threshold) {
        flex-direction: column;
      }
    }

    &__row {
      @extend %navigation-row;

      &--full-width {
        @extend %navigation-row;
        max-width: 100%;
      }
    }

    @include deprecate('3.0.0', 'Use .p-navigation__row / .p-navigation__row--full-width instead') {
      &.row {
        @extend %navigation-row;
      }
    }

    &:target {
      &::after {
        display: none;
      }

      .p-navigation__nav {
        display: flex;
      }

      .p-navigation__toggle--open {
        display: none;
      }

      .p-navigation__toggle--close {
        @media (max-width: $breakpoint-navigation-threshold) {
          display: block;
        }
      }
    }

    &__toggle {
      &--open,
      &--close {
        display: none;
        margin: 0 0 auto $sph-inner;
        padding: $spv-inner--medium 0;

        &,
        &:visited,
        &:focus,
        &:hover {
          text-decoration: none;
        }
      }

      &--open {
        @media (max-width: $breakpoint-navigation-threshold) {
          display: block;
        }
      }
    }

    .u-image-position .u-image-position--right {
      order: 2; // ensure it is to the right of search
      // XXX: patch - override utility, as it positions absolutely, which leads to overlap on smaller screens.
      // Should use flex instead; But that will require changing the markup
      position: relative;
      right: unset;
    }
  }

  // Theming
  $color-navigation-background: null !default;
  $color-navigation-text: null !default;
  $lightness-threshold: 70;

  @if (map-get($theme-default--dark, nav) == true) {
    // dark theme
    $color-navigation-background: $colors--dark-theme--background-highlighted !default;
    $color-navigation-text: if(lightness($color-navigation-background) > $lightness-threshold, $colors--light-theme--text-default, $colors--dark-theme--text-default) !default;

    .p-navigation {
      @include p-navigation--dark-theme($color-navigation-background, $color-navigation-text, false);
    }

    .p-navigation.is-light {
      @include p-navigation--light-theme($color-navigation-background, $color-navigation-text, true);
    }
  } @else {
    // light theme
    $color-navigation-background: $colors--light-theme--background !default;
    $color-navigation-text: if(lightness($color-navigation-background) > $lightness-threshold, $colors--light-theme--text-default, $colors--dark-theme--text-default) !default;

    .p-navigation {
      @include p-navigation--light-theme($color-navigation-background, $color-navigation-text, false);
    }

    .p-navigation.is-dark {
      @include p-navigation--dark-theme($color-navigation-background, $color-navigation-text, true);
    }
  }
}

@mixin p-navigation--light-theme($color-navigation-background, $color-navigation-text, $override-default: false) {
  @if ($override-default) {
    $color-navigation-background: $colors--light-theme--background;
    $color-navigation-text: $colors--light-theme--text-default;
  }

  background-color: $color-navigation-background;
  $faded-opacity: 0.6;

  .p-navigation__link > a,
  .p-navigation__toggle--close,
  .p-navigation__toggle--open {
    &,
    &:visited,
    &:focus {
      color: $color-navigation-text;
    }

    &:hover {
      opacity: $faded-opacity;
    }
  }

  @include deprecate('3.0.0', 'Selectors should use classes.') {
    .p-navigation__link.is-selected > a {
      opacity: $faded-opacity;
    }
  }

  .p-navigation__link > a::before {
    @media (max-width: $breakpoint-navigation-threshold) {
      // separator color on small screens
      background: $colors--light-theme--border-default;
    }
  }
}

@mixin p-navigation--dark-theme($color-navigation-background, $color-navigation-text, $override-default: false) {
  @if ($override-default) {
    $color-navigation-background: $colors--dark-theme--background-highlighted;
    $color-navigation-text: $colors--dark-theme--text-default;
  }

  background-color: $color-navigation-background;

  .p-navigation__link > a,
  .p-navigation__toggle--close,
  .p-navigation__toggle--open {
    &,
    &:visited,
    &:focus {
      color: $color-navigation-text;
    }

    &:hover {
      opacity: $faded-opacity;
    }
  }

  @include deprecate('3.0.0', 'Selectors should use classes.') {
    .p-navigation__link.is-selected > a {
      opacity: $faded-opacity;
    }
  }

  // separator color on small screens
  .p-navigation__link > a::before {
    @media (max-width: $breakpoint-navigation-threshold) {
      background: $colors--dark-theme--border-default;
    }
  }
}
