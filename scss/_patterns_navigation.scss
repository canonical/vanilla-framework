@import 'settings';

$navigation-hover-opacity: 0.58;
$lightness-threshold: 70;

@mixin vf-p-navigation {
  // placeholders
  %navigation-row {
    display: flex;
    flex-direction: column;

    @media (min-width: $breakpoint-navigation-threshold) {
      flex-direction: row;
    }
  }

  %navigation-link {
    $properties: #{background-color, color, opacity};
    @include vf-animation($properties);
    display: block;
    line-height: map-get($line-heights, default-text);
    margin-bottom: 0;
    overflow: hidden;
    padding: $spv-inner--medium 0;
    position: relative;
    text-overflow: ellipsis;
    white-space: nowrap;

    @media (min-width: $breakpoint-navigation-threshold) {
      padding: $spv-inner--medium $sph-inner;
    }

    &::before {
      content: '';
      height: 1px;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;

      @media (min-width: $breakpoint-navigation-threshold) {
        content: none;
      }
    }

    &,
    &:visited,
    &:focus,
    &:hover {
      text-decoration: none;
    }
  }

  %navigation-items {
    list-style: none;
    margin: -1px 0 0 0;
    padding: 0;

    @media (min-width: $breakpoint-navigation-threshold) {
      display: flex;
      flex-wrap: wrap;
      margin-top: 0; // prevents bottom border of nav from moving 1px
    }
  }

  %navigation-item {
    @media (min-width: $breakpoint-navigation-threshold) {
      $nav-link-max-width: 20em !default;
      max-width: $nav-link-max-width;
    }
  }

  %navigation-item-in-logo {
    display: flex;
  }

  // no colours
  .p-navigation {
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    position: relative;
    z-index: 10;

    @media (min-width: $breakpoint-navigation-threshold) {
      flex-direction: row;
    }

    // navigation row
    &__row {
      @extend %fixed-width-container;
      @extend %navigation-row;

      &--full-width {
        @extend %vf-grid-container-padding;
        @extend %navigation-row;
        width: 100%;
      }
    }

    @include deprecate('3.0.0', 'Use .p-navigation__row / .p-navigation__row--full-width instead') {
      &.row {
        @extend %navigation-row;
      }
    }

    // navigation logo
    &__banner {
      display: flex;
      flex: 0 0 auto;
      justify-content: space-between;
    }

    &__logo {
      display: flex;
      flex: 0 0 auto;
      height: 3rem;
      margin: 0 $sph-inner 0 0;

      .p-navigation__item {
        @extend %navigation-item-in-logo;
      }

      @include deprecate('3.0.0', 'Use .p-navigation__items, .p-navigation__item, .p-navigation__link instead.') {
        .p-navigation__link {
          @extend %navigation-item-in-logo;
        }
      }
    }

    &__image {
      align-self: center;
      max-height: 2rem;
      min-height: 1.5rem;
    }

    // navigation items
    &__nav {
      display: none;
      flex-direction: column;

      @media (min-width: $breakpoint-navigation-threshold) {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        width: 100%;
      }
    }

    &__items {
      @extend %navigation-items;
    }

    &__item {
      @extend %navigation-item;

      // this needs to be nested in __item until in 3.0 we remove deprecated __link styles
      .p-navigation__link {
        @extend %navigation-link;
      }
    }

    @include deprecate('3.0.0', 'Use .p-navigation__items, .p-navigation__item, .p-navigation__link classes instead.') {
      &__link {
        @extend %navigation-item;

        & > a {
          @extend %navigation-link;
        }
      }

      &__links {
        @extend %navigation-items;
      }
    }

    // p-search-box overrides
    .p-search-box {
      flex: 1 0 auto;
      margin: -1px 0 $spv-inner--small 0;
      min-width: 10em;
      order: -1;

      @media (min-width: $breakpoint-navigation-threshold) {
        // align baselines of menu items and input text
        $input-gap-top: $spv-inner--medium - $spv-nudge;
        display: flex;
        flex: 1 1 auto;
        margin: $input-gap-top 0 auto auto;
        max-width: 20rem;
        min-width: initial;
        order: 1;
      }
    }

    // small screen navigation toggles
    &:target {
      &::after {
        display: none;
      }

      .p-navigation__nav {
        display: flex;
      }

      .p-navigation__toggle--open {
        display: none;
      }

      .p-navigation__toggle--close {
        display: block;

        @media (min-width: $breakpoint-navigation-threshold) {
          display: none;
        }
      }
    }

    &__toggle {
      &--open,
      &--close {
        margin: 0 0 auto $sph-inner;
        padding: $spv-inner--medium 0;

        &,
        &:visited,
        &:focus,
        &:hover {
          text-decoration: none;
        }
      }

      &--close {
        display: none;
      }

      &--open {
        display: block;

        @media (min-width: $breakpoint-navigation-threshold) {
          display: none;
        }
      }
    }

    .u-image-position .u-image-position--right {
      order: 2; // ensure it is to the right of search
      // XXX: patch - override utility, as it positions absolutely, which leads to overlap on smaller screens.
      // Should use flex instead; But that will require changing the markup
      position: relative;
      right: initial;
    }
  }

  // Theming
  @if ($theme-default-nav == 'dark') {
    .p-navigation {
      @include vf-navigation-dark-theme;
    }

    .p-navigation.is-light {
      @include vf-navigation-light-theme(true);
    }
  } @else {
    .p-navigation {
      @include vf-navigation-light-theme;
    }

    .p-navigation.is-dark {
      @include vf-navigation-dark-theme(true);
    }
  }
}

@mixin vf-navigation-theme(
  // color for navigation separator on small screens
    $color-navigation-separator,
  // color for navigation background
    $color-navigation-background,
  // color for navigation text
    $color-navigation-text
) {
  background-color: $color-navigation-background;

  %navigation-link-theme {
    &,
    &:visited,
    &:focus {
      color: $color-navigation-text;
    }

    &:hover {
      opacity: $navigation-hover-opacity;
    }
  }

  %navigation-link-selected {
    opacity: $navigation-hover-opacity;
  }

  %navigation-link-before {
    // separator color on small screens
    background: $color-navigation-separator;
  }

  .p-navigation__item > .p-navigation__link, // remove nesting in 3.0 when deprecated __link styles are removed
  .p-navigation__toggle--close,
  .p-navigation__toggle--open {
    @extend %navigation-link-theme;
  }

  .p-navigation__item.is-selected > .p-navigation__link {
    @extend %navigation-link-selected;
  }

  .p-navigation__item > .p-navigation__link::before {
    // remove nesting in 3.0 when deprecated __link styles are removed
    @extend %navigation-link-before;
  }

  @include deprecate('3.0.0', 'Use .p-navigation__items, .p-navigation__item, .p-navigation__link classes instead.') {
    .p-navigation__link > a {
      @extend %navigation-link-theme;
    }

    .p-navigation__link.is-selected > a {
      @extend %navigation-link-selected;
    }

    .p-navigation__link > a::before {
      @extend %navigation-link-before;
    }
  }
}

@mixin vf-navigation-light-theme($override-default: false) {
  @if ($override-default) {
    @include vf-navigation-theme(
      $color-navigation-background: $colors--light-theme--background,
      $color-navigation-text: $colors--light-theme--text-default,
      $color-navigation-separator: $colors--light-theme--border-default
    );
  } @else {
    // take $color-navigation-background (that can be overridden) into account
    $color-navigation-background: $colors--light-theme--background !default;
    $color-navigation-text: if(lightness($color-navigation-background) > $lightness-threshold, $colors--light-theme--text-default, $colors--dark-theme--text-default) !default;

    @include vf-navigation-theme(
      $color-navigation-background: $color-navigation-background,
      $color-navigation-text: $color-navigation-text,
      $color-navigation-separator: $colors--light-theme--border-default
    );
  }
}

@mixin vf-navigation-dark-theme($override-default: false) {
  @if ($override-default) {
    @include vf-navigation-theme(
      $color-navigation-background: $colors--dark-theme--background-highlighted,
      $color-navigation-text: $colors--dark-theme--text-default,
      $color-navigation-separator: $colors--dark-theme--border-default
    );
  } @else {
    // take $color-navigation-background (that can be overridden) into account
    $color-navigation-background: $colors--dark-theme--background-highlighted !default;
    $color-navigation-text: if(lightness($color-navigation-background) > $lightness-threshold, $colors--light-theme--text-default, $colors--dark-theme--text-default) !default;

    @include vf-navigation-theme(
      $color-navigation-background: $color-navigation-background,
      $color-navigation-text: $color-navigation-text,
      $color-navigation-separator: $colors--dark-theme--border-default
    );
  }
}
