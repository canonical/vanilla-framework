@import 'settings';

$lightness-threshold: 70;

@mixin vf-p-navigation {
  // placeholders
  %navigation-row {
    display: flex;
    flex-direction: column;

    @media (min-width: $breakpoint-navigation-threshold) {
      flex-direction: row;
    }
  }

  %navigation-link-responsive-padding-vertical {
    padding-bottom: $spv-inner--large;
    padding-top: $spv-inner--large;
  }

  %navigation-link-responsive-padding-left {
    // follows grid padding to ensure nav items on small breakpoints align with grid padding
    padding-left: map-get($grid-margin-widths, small);

    @media (min-width: $threshold-4-6-col) {
      padding-left: map-get($grid-margin-widths, medium);
    }

    @media (min-width: $breakpoint-navigation-threshold) {
      padding-left: $sph-inner;
    }
  }

  %navigation-link-responsive-padding-right {
    // follows grid padding to ensure nav items on small breakpoints align with grid padding
    padding-right: map-get($grid-margin-widths, small);

    @media (min-width: $threshold-4-6-col) {
      padding-right: map-get($grid-margin-widths, medium);
    }

    @media (min-width: $breakpoint-navigation-threshold) {
      padding-right: $sph-inner;
    }
  }

  %navigation-link-responsive-padding-horizontal {
    @extend %navigation-link-responsive-padding-left;
    @extend %navigation-link-responsive-padding-right;
  }

  %navigation-link {
    $properties: #{background-color, color, opacity};
    @extend %navigation-link-responsive-padding-horizontal;
    @extend %navigation-link-responsive-padding-vertical;
    @include vf-animation($properties, snap);
    @include vf-focus;

    display: block;
    font-weight: $font-weight-bold;
    line-height: map-get($line-heights, default-text);
    margin-bottom: 0;
    overflow: hidden;
    position: relative;
    text-overflow: ellipsis;
    white-space: nowrap;

    &::before {
      content: '';
      height: 1px;
      left: 0;
      position: absolute;
      right: 0;
      top: 0;

      @media (min-width: $breakpoint-navigation-threshold) {
        content: none;
      }
    }

    &,
    &:visited,
    &:focus,
    &:hover {
      text-decoration: none;
    }
  }

  %navigation-items {
    list-style: none;
    margin: -1px 0 0 0;
    padding: 0;

    @media (min-width: $breakpoint-navigation-threshold) {
      display: flex;
      flex-wrap: wrap;
      margin-top: 0; // prevents bottom border of nav from moving 1px
    }
  }

  %navigation-item {
    @media (min-width: $breakpoint-navigation-threshold) {
      $nav-link-max-width: 20em !default;

      max-width: $nav-link-max-width;
    }
  }

  %navigation-item-in-logo {
    @include vf-focus;

    display: flex;
  }

  %vf-reset-horizontal-padding {
    padding-left: 0;
    padding-right: 0;
  }
  // no colours
  .p-navigation {
    display: flex;
    flex-direction: column;
    flex-shrink: 0;
    position: relative;
    z-index: 10;

    @media (min-width: $breakpoint-navigation-threshold) {
      flex-direction: row;
    }

    // navigation row
    &__row {
      @extend %fixed-width-container;
      @extend %navigation-row;
      @extend %vf-reset-horizontal-padding;

      &--full-width {
        @extend %navigation-row;

        width: 100%;
      }
    }

    @include deprecate('3.0.0', 'Use .p-navigation__row / .p-navigation__row--full-width instead') {
      &.row {
        @extend %navigation-row;
      }
    }

    &__item,
    &__item--dropdown-toggle {
      @extend %navigation-item;

      // this needs to be nested in __item until in 3.0 we remove deprecated __link styles
      .p-navigation__link {
        @extend %navigation-link;
      }
    }

    // navigation logo
    &__banner {
      @extend %navigation-link-responsive-padding-left;

      display: flex;
      flex: 0 0 auto;
      justify-content: space-between;
      padding-right: 0;

      @media (min-width: $threshold-4-6-col) {
        padding-right: 0;
      }

      @media (min-width: $breakpoint-navigation-threshold) {
        padding-left: map-get($grid-margin-widths, small);
      }
    }

    &__logo {
      display: flex;
      flex: 0 0 auto;
      height: 3.5rem;
      margin: 0 $sph-inner 0 0;

      .p-navigation__item {
        @extend %navigation-item-in-logo;
      }

      @include deprecate('3.0.0', 'Use .p-navigation__items, .p-navigation__item, .p-navigation__link instead.') {
        .p-navigation__link {
          @extend %navigation-item-in-logo;
        }
      }
    }

    &__image {
      align-self: center;
      max-height: 2rem;
      min-height: 1.5rem;
    }

    // navigation items
    &__nav {
      display: none;
      flex-direction: column;

      @media (min-width: $breakpoint-navigation-threshold) {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        margin-right: map-get($grid-margin-widths, large);
        width: 100%;
      }
    }

    &__items {
      @extend %navigation-items;
    }

    @include deprecate('3.0.0', 'Use .p-navigation__items, .p-navigation__item, .p-navigation__link classes instead.') {
      &__link {
        @extend %navigation-item;

        // stylelint-disable-next-line selector-max-type -- this is deprecated use, will be removed
        & > a {
          @extend %navigation-link;
        }
      }

      &__links {
        @extend %navigation-items;
      }
    }

    // p-search-box overrides
    .p-search-box {
      flex: 1 0 auto;
      margin-left: map-get($grid-margin-widths, small);
      margin-right: map-get($grid-margin-widths, small);
      margin-top: -1px;
      min-width: 10em;
      order: -1;

      @media (min-width: $threshold-4-6-col) {
        margin-left: map-get($grid-margin-widths, medium);
        margin-right: map-get($grid-margin-widths, medium);
      }

      @media (min-width: $breakpoint-navigation-threshold) {
        // align baselines of menu items and input text
        $input-gap-top: $spv-inner--large - $spv-nudge;

        display: flex;
        flex: 1 1 auto;
        margin: $input-gap-top 0 auto auto;
        max-width: 20rem;
        min-width: initial;
        order: 1;
      }
    }

    &__toggle {
      &--close {
        display: none;
      }

      &--open {
        display: block;

        @media (min-width: $breakpoint-navigation-threshold) {
          display: none;
        }
      }

      &--open,
      &--close {
        @extend %navigation-link-responsive-padding-horizontal;
        @extend %navigation-link-responsive-padding-vertical;
        @include vf-focus;

        margin: 0 0 auto 0;

        &,
        &:visited,
        &:focus,
        &:hover {
          text-decoration: none;
        }
      }
    }

    // small screen navigation toggles
    &:target {
      &::after {
        display: none;
      }

      .p-navigation__nav {
        display: flex;
      }

      .p-navigation__toggle--open {
        display: none;
      }

      .p-navigation__toggle--close {
        display: block;

        @media (min-width: $breakpoint-navigation-threshold) {
          display: none;
        }
      }
    }

    .u-image-position .u-image-position--right {
      order: 2; // ensure it is to the right of search
      // XXX: patch - override utility, as it positions absolutely, which leads to overlap on smaller screens.
      // Should use flex instead; But that will require changing the markup
      position: relative;
      right: initial;
    }
  }

  // DROPDOWNS

  .p-navigation__item--dropdown-toggle {
    position: relative;

    &::after {
      background-position: center;
      background-repeat: no-repeat;
      background-size: contain;
      content: '';
      display: block;
      height: $spv-inner--large;
      pointer-events: none;
      position: absolute;
      right: map-get($grid-margin-widths, small);
      text-indent: calc(100% + 10rem);
      top: calc(#{$spv-inner--large} + #{map-get($nudges, nudge--x-small)});
      width: map-get($icon-sizes, default);

      @media (min-width: $threshold-4-6-col) {
        right: map-get($grid-margin-widths, medium);
      }

      @media (min-width: $breakpoint-navigation-threshold) {
        right: calc(#{$sph-inner--small} + 1px); // 1px for the border on selects. this aligns it with any selects underneath
      }
    }

    &.is-active {
      &::after {
        transform: rotate(180deg);
      }

      .p-navigation__dropdown,
      .p-navigation__dropdown--right {
        display: block;
      }
    }

    .p-navigation__link {
      // add padding to accommodate icon
      padding-right: 2 * $sph-inner--small + map-get($icon-sizes, default);
    }
  }

  .p-navigation__dropdown,
  .p-navigation__dropdown--right {
    @extend %vf-has-box-shadow;
    @extend %vf-has-round-corners;

    display: none;
    margin: 0;
    min-width: 100%;
    padding: 0;
    z-index: 5;

    @media (min-width: $breakpoint-navigation-threshold) {
      position: absolute;
      // padding applied to .p-navigation__link + line-heigh of the anchor text inside
      top: $spv-inner--large * 2 + map-get($line-heights, default-text);
    }

    @media (max-width: $breakpoint-navigation-threshold - 1) {
      box-shadow: none;
    }
  }

  .p-navigation__dropdown--right {
    right: 0;
  }

  .p-navigation__dropdown-item {
    @extend %navigation-link-responsive-padding-horizontal;

    display: block;
    padding-bottom: $spv-inner--small;
    padding-top: $spv-inner--small;
    white-space: nowrap;

    @media (min-width: $breakpoint-navigation-threshold) {
      padding-bottom: $spv-inner--medium;
      padding-top: $spv-inner--medium;
    }

    &,
    &:active,
    &:focus,
    &:hover,
    &:visited {
      text-decoration: none;
    }
  }

  // Theming
  @if ($theme-default-nav == 'dark') {
    .p-navigation {
      @include vf-navigation-dark-theme;
    }

    .p-navigation.is-light {
      @include vf-navigation-light-theme(true);
    }
  } @else {
    .p-navigation {
      @include vf-navigation-light-theme;
    }

    .p-navigation.is-dark {
      @include vf-navigation-dark-theme(true);
    }
  }
}

@mixin vf-navigation-theme(
  // color for the navigation separator on small screens
  $color-navigation-separator,
  // color for the navigation background
  $color-navigation-background,
  $color-navigation-background--active,
  // color for the navigation text
  $color-navigation-text,
  $color-navigation-background--hover,
  // color for the navigation highlight bar
  $color-navigation-highlight,
  $color-navigation-icon
) {
  background-color: $color-navigation-background;

  %navigation-link-before {
    // separator color on small screens
    background: $color-navigation-separator;
  }

  %navigation-link-hover {
    background-color: $color-navigation-background--hover;
  }

  %navigation-link-active {
    background-color: $color-navigation-background--active;
  }

  %navigation-link-theme {
    &,
    &:hover,
    &:visited,
    &:focus {
      color: $color-navigation-text;
    }

    &:hover {
      @extend %navigation-link-hover;
    }

    &:active {
      @extend %navigation-link-active;
    }
  }

  %navigation-link-selected {
    @extend %navigation-link-hover;

    @include vf-highlight-bar($color-navigation-highlight, left, true);

    @media (min-width: $breakpoint-navigation-threshold) {
      @include vf-highlight-bar($color-navigation-highlight, bottom, false);
    }
  }

  [class*="p-navigation__item"] > .p-navigation__link, // remove nesting in 3.0 when deprecated __link styles are removed
  .p-navigation__toggle--close,
  .p-navigation__toggle--open {
    @extend %navigation-link-theme;
  }

  .p-navigation__item--dropdown-toggle {
    &::after {
      @include vf-icon-chevron($color-navigation-icon);
    }

    &.is-active > .p-navigation__link {
      @extend %navigation-link-active;
    }
  }

  .p-navigation__dropdown,
  .p-navigation__dropdown--right {
    background-color: $color-navigation-background;
  }

  .p-navigation__dropdown-item {
    @extend %navigation-link-theme;
  }

  [class*='p-navigation__item'].is-selected > .p-navigation__link {
    @extend %navigation-link-selected;
  }

  [class*='p-navigation__item'] > .p-navigation__link::before {
    // remove nesting in 3.0 when deprecated __link styles are removed
    @extend %navigation-link-before;
  }

  @include deprecate('3.0.0', 'Use .p-navigation__items, .p-navigation__item, .p-navigation__link classes instead.') {
    // stylelint-disable selector-max-type -- this is deprecated use, will be removed
    .p-navigation__link > a {
      @extend %navigation-link-theme;
    }

    .p-navigation__link.is-selected > a {
      @extend %navigation-link-selected;
    }

    .p-navigation__link > a::before {
      @extend %navigation-link-before;
    }
    // stylelint-enable selector-max-type
  }
}

@mixin vf-navigation-light-theme($override-default: false) {
  @if ($override-default) {
    @include vf-navigation-theme(
      $color-navigation-text: $colors--light-theme--text-default,
      $color-navigation-background: $colors--light-theme--background-default,
      $color-navigation-background--hover: $colors--light-theme--background-alt,
      $color-navigation-background--active: $colors--light-theme--background-active,
      $color-navigation-highlight: $color-accent,
      $color-navigation-separator: $colors--light-theme--border-low-contrast,
      $color-navigation-icon: $colors--light-theme--text-muted
    );
  } @else {
    // take $color-navigation-background (that can be overridden) into account
    $color-navigation-background: $colors--light-theme--background-default !default;
    $color-navigation-text: if(lightness($color-navigation-background) > $lightness-threshold, $colors--light-theme--text-default, $colors--dark-theme--text-default) !default;

    @include vf-navigation-theme(
      $color-navigation-text: $color-navigation-text,
      $color-navigation-background: $color-navigation-background,
      $color-navigation-background--hover: $colors--light-theme--background-alt,
      $color-navigation-background--active: $colors--light-theme--background-active,
      $color-navigation-highlight: $color-accent,
      $color-navigation-separator: $colors--light-theme--border-low-contrast,
      $color-navigation-icon: $colors--light-theme--text-muted
    );
  }
}

@mixin vf-navigation-dark-theme($override-default: false) {
  @if ($override-default) {
    @include vf-navigation-theme(
      $color-navigation-text: $colors--dark-theme--text-default,
      $color-navigation-background: $colors--dark-theme--background-default,
      $color-navigation-background--hover: $colors--dark-theme--background-hover,
      $color-navigation-background--active: $colors--dark-theme--background-active,
      $color-navigation-highlight: $color-accent,
      $color-navigation-separator: $colors--dark-theme--border-low-contrast,
      $color-navigation-icon: $colors--dark-theme--text-muted
    );
  } @else {
    // take $color-navigation-background (that can be overridden) into account
    $color-navigation-background: $colors--dark-theme--background-default !default;
    $color-navigation-text: if(lightness($color-navigation-background) > $lightness-threshold, $colors--light-theme--text-default, $colors--dark-theme--text-default) !default;

    @include vf-navigation-theme(
      $color-navigation-text: $color-navigation-text,
      $color-navigation-background: $color-navigation-background,
      $color-navigation-background--hover: $colors--dark-theme--background-hover,
      $color-navigation-background--active: $colors--dark-theme--background-active,
      $color-navigation-highlight: $color-accent,
      $color-navigation-separator: $colors--dark-theme--border-low-contrast,
      $color-navigation-icon: #999
    );
  }
}
