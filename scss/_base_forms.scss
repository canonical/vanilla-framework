@import 'settings';
@import 'base_forms-tick-elements';
@import 'base_forms-range';

// Form element styles
@mixin vf-b-forms {
  @include vf-b-tick-elements;
  @include vf-b-range;

  // Used in buttons, inputs
  %bordered-text-vertical-padding {
    padding-bottom: calc(#{$spv-nudge} - 1px);
    padding-top: calc(#{$spv-nudge} - 1px);
  }

  // Default form input element styles
  %vf-input-elements {
    @extend %bordered-text-vertical-padding;
    @include vf-focus($color-focus, $bar-thickness, true);

    // stylelint-disable property-no-vendor-prefix
    -webkit-appearance: textfield;
    -moz-appearance: textfield;
    appearance: textfield;
    // stylelint-enable property-no-vendor-prefix

    background-color: $color-x-light;
    border: 1px solid $colors--light-theme--border-high-contrast;
    border-radius: 0;
    box-shadow: inset 0 1px 1px $color-input-shadow;
    color: $color-dark;
    font-family: unquote($font-base-family);
    font-size: 1rem;
    font-weight: $font-weight-regular-text;
    line-height: map-get($line-heights, default-text);
    margin-bottom: $input-margin-bottom;
    min-width: 10em;
    padding-left: $sph-inner--small;
    padding-right: $sph-inner--small;
    vertical-align: baseline;
    width: 100%;

    &.is-dense {
      margin: 0 0 ($spv-inner--small - $spv-nudge) 0;
      padding-bottom: calc(#{$spv-nudge - $spv-inner--x-small} - 1px);
      padding-top: calc(#{$spv-nudge - $spv-inner--x-small} - 1px);
    }

    &::-webkit-placeholder,
    &::-ms-placeholder,
    &:-ms-placeholder,
    &::placeholder {
      color: $color-mid-dark;
      opacity: 1;
    }

    &[disabled],
    &[disabled='disabled'] {
      @extend %vf-disabled-element;
    }

    &[readonly],
    &[readonly='readonly'] {
      @extend %vf-readonly-element;
    }

    @each $state, $color in $states {
      &.has-#{$state} {
        border: 1px solid $color;
      }
    }
  }

  // Disabled form elements
  %vf-disabled-element {
    cursor: not-allowed;
    opacity: $disabled-element-opacity;
  }

  // Readonly form elements
  %vf-readonly-element {
    color: $color-mid-light;
    cursor: default;

    &:hover,
    &:active {
      border-color: $color-mid-dark;
      outline: none;
    }
  }

  // stylelint-disable selector-max-type -- base styles can use type selectors
  label {
    @include p-max-width;

    cursor: pointer;
    display: block;
    margin-bottom: $spv-outer--small-scaleable - $spv-nudge;
    margin-top: 0;
    padding-top: map-get($nudges, nudge--p);
    width: fit-content;

    &.is-required::after {
      color: $color-negative;
      content: '*';
      left: $spv-inner--x-small;
      position: relative;
    }

    @each $state, $color in $states {
      &.has-#{$state} {
        color: $color;
      }
    }
  }

  // Input styles
  [type='text'],
  [type='date'],
  [type='datetime'],
  [type='datetime-local'],
  [type='month'],
  [type='time'],
  [type='week'],
  [type='number'],
  [type='search'],
  [type='password'],
  [type='email'],
  [type='url'],
  [type='tel'],
  select {
    @extend %vf-input-elements;
  }

  [type='file'] {
    @extend %bordered-text-vertical-padding;
    @include vf-focus;

    margin-bottom: $input-margin-bottom;
    width: 100%;
  }

  [type='search'] {
    // stylelint-disable property-no-vendor-prefix
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    // stylelint-enable property-no-vendor-prefix
    border-radius: 0;

    // These vendor prefixes are unique and cannot be added by autoprefixer
    &::-webkit-search-results-decoration {
      display: none;
    }

    &::-webkit-search-cancel-button {
      -webkit-appearance: searchfield-cancel-button; // stylelint-disable-line property-no-vendor-prefix
      cursor: pointer;
    }
  }

  // Select styles
  select {
    @include vf-icon-chevron;

    // stylelint-disable property-no-vendor-prefix
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    // stylelint-enable property-no-vendor-prefix
    background-color: $color-x-light;
    background-position: right $sph-inner--small center;
    background-repeat: no-repeat;
    background-size: map-get($icon-sizes, default);
    box-shadow: none;
    color: $color-dark;
    min-height: map-get($line-heights, default-text);
    padding-right: calc(#{$default-icon-size} + #{2 * $sph-inner--small});
    text-indent: 0.01px;
    text-overflow: '';

    &:hover {
      cursor: pointer;
    }

    &[multiple],
    &[size] {
      background-image: none;
      box-shadow: none;
      height: auto;

      option {
        font-weight: $font-weight-regular-text;
        line-height: calc(#{$sp-unit * 2} - 2px);
        padding: $spv-inner--small $sph-inner--small;
      }
    }
  }

  // Textarea styles
  textarea {
    @extend %vf-input-elements;

    margin-bottom: $input-margin-bottom;
    overflow: auto;
    vertical-align: top;
  }

  // Fieldset styles
  fieldset {
    @extend %vf-card;
    @extend %vf-is-bordered;
    @extend %vf-has-round-corners;

    margin-left: 0;
    margin-right: 0;
    padding: calc(#{$spv-inner--large} - 1px);
  }
  // stylelint-enable selector-max-type
}
