@import 'settings';
/*
  @classreference
  notification:
    Root element:
        .p-notification:
            Notification in default variant. Same as `.p-notification--information`.
        .p-notification--information:
            Information notification. Same as default `.p-notification`.
        .p-notification--positive:
            Positive notification.
        .p-notification--caution:
            Caution notification.
        .p-notification--negative:
            Negative notification.
        "&.is-borderless":
            Borderless variant of notification. Used when notification is embeded into another container element.
        "&.is-inline":
            Inline version of notification with title and message rendered side by side.
    Content container:
        .p-notification__content:
            Container element for notification content (title and message).
    Title:
        .p-notification__title:
            The notification title.
    Message:
        .p-notification__message:
            Text of the notification message.
    Close button:
        .p-notification__close:
            The button to close the notification.
    Status:
        .p-notification__status:
            The status text for screen readers.
*/

@mixin vf-p-notification {
  $color-information: $color-information;
  $color-positive: $color-positive;
  $color-caution: $color-caution;
  $color-negative: $color-negative;

  $border-width: 4px;

  $states: (
    'information': $color-information,
    'positive': $color-positive,
    'caution': $color-caution,
    'negative': $color-negative,
  );

  @include vf-b-placeholders;
  @include vf-b-typography;

  // stylelint-disable max-nesting-depth -- allow deeper nesting for modifiers
  %vf-notification-icon {
    background-position: $sph--large $spv--small;
    background-repeat: no-repeat;
    background-size: map-get($icon-sizes, default);
    padding-left: 2 * $sph--large + map-get($icon-sizes, default);
  }

  .p-notification {
    @extend %vf-has-box-shadow;
    @extend %vf-has-round-corners;
    @extend %vf-notification-icon;

    border: $border-width solid $color-mid-light;
    display: grid;
    grid-template-areas: 'content close';
    grid-template-columns: 1fr auto;
    margin-bottom: $spv--small;
    padding-bottom: calc($spv--small - $border-width);
    padding-right: $sph--large * 0.5;
    padding-top: calc($spv--small - $border-width);
    position: relative;

    &::before {
      background-color: $color-information;
      content: '';
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: $border-width;
    }

    $borderless-notification-icon-vert-offset: $spv-nudge;

    &.is-borderless {
      background-position: 0 $borderless-notification-icon-vert-offset;
      border: none;
      margin-top: 0;
      padding: 0 0 0 2 * $sph--large;

      &::before {
        display: none;
      }

      .p-notification__close {
        top: 0;
      }
    }

    .p-notification__content {
      grid-area: content;
    }

    .p-notification__title {
      @extend %bold;

      display: inline;
      padding-right: $sph--small;
    }

    .p-notification__message {
      display: inline;

      > *:last-child {
        margin-bottom: 0;
      }
    }

    .p-notification__status {
      @extend %vf-hide-text;
    }

    // status specific overrides
    @each $state, $color in $states {
      &--#{$state} {
        &::before {
          background-color: $color;
        }
      }
    }

    .p-notification__close {
      appearance: none;
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16'%3E%3Cpath fill='%23111' d='M13.693 2.308 11.385 0 6.846 4.538 2.308 0 0 2.308l4.538 4.538L0 11.385l2.308 2.307 4.538-4.538 4.539 4.538 2.307-2.307-4.538-4.539z'/%3E%3C/svg%3E") 50% 50% no-repeat;
      border: 0;
      cursor: pointer;
      grid-area: close;
      height: 1rem;
      margin: 0;
      padding: 0;
      position: relative;
      right: $sph--large * 0.5;
      top: $spv--small;
      width: 1rem;
    }

    &.is-inline {
      .p-notification__content {
        align-items: baseline;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
      }

      .p-notification__title {
        flex-shrink: 0;
      }
    }
  }
  // stylelint-enable max-nesting-depth
}
