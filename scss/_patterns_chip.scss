@import 'settings';

@mixin vf-p-chip {
  %vf-chip {
    @extend %small-text;
    @include vf-animation(#{background-color, border-color}, snap, out);
    @include vf-focus;

    align-items: baseline;
    border-radius: 1rem;
    display: inline-flex;
    margin: 0 $sph--small $input-margin-bottom 0;
    max-width: 100%;
    padding: calc(#{$spv--x-small} - 1px) $sph--small; // account for border thickness using calc
    position: relative;
    user-select: none;
    vertical-align: calc(1px - #{map-get($nudges, p)});
    white-space: nowrap;

    .p-chip__lead,
    .p-chip__value {
      display: inline;
      margin-bottom: 0;
      overflow: hidden;
      padding: 0;
      text-overflow: ellipsis;
      vertical-align: baseline;
    }

    .p-chip__lead {
      @extend %x-small-text;

      text-transform: uppercase;
    }

    .p-chip__lead + .p-chip__value::before {
      @extend %x-small-text;

      content: ': ';
    }

    .p-chip__value {
      @extend %small-text;
    }

    .p-chip__dismiss {
      @include vf-button-pattern(
        $button-background-color: transparent,
        $button-border-color: transparent,
        $button-hover-background-color: transparent,
        $button-hover-border-color: transparent
      );

      align-self: center;
      border: none;
      flex: 0 0 auto;
      height: $default-icon-size;
      line-height: $default-icon-size;
      margin-bottom: 0;
      margin-left: $sph--x-small;
      margin-top: 0; // override top margin that button gets in some contexts (in paragraphs)
      padding: 0;
      position: relative;
      width: $default-icon-size;
    }

    &.is-dense {
      padding: 0 $sph--small;
    }

    &.is-inline {
      margin-bottom: 0;
      margin-top: 0;
      vertical-align: baseline;
    }
  }

  @include vf-chip-default;
  @include vf-chip-positive;
  @include vf-chip-caution;
  @include vf-chip-negative;
  @include vf-chip-information;

  // Theming
  @if ($theme-default-p-chip == 'dark') {
    .p-chip {
      @include vf-chip-dark-theme;
    }
    .p-chip.is-light {
      @include vf-chip-light-theme;
    }
    .p-chip--positive {
      @include vf-chip-dark-theme(positive);
    }
    .p-chip--positive.is-light {
      @include vf-chip-light-theme(positive);
    }
    .p-chip--caution {
      @include vf-chip-dark-theme(caution);
    }
    .p-chip--caution.is-light {
      @include vf-chip-light-theme(caution);
    }
    .p-chip--negative {
      @include vf-chip-dark-theme(negative);
    }
    .p-chip--negative.is-light {
      @include vf-chip-light-theme(negative);
    }
    .p-chip--information {
      @include vf-chip-dark-theme(information);
    }
    .p-chip--information.is-light {
      @include vf-chip-light-theme(information);
    }
  } @else {
    .p-chip {
      @include vf-chip-light-theme;
    }
    .p-chip.is-dark {
      @include vf-chip-dark-theme;
    }
    .p-chip--positive {
      @include vf-chip-light-theme(positive);
    }
    .p-chip--positive.is-dark {
      @include vf-chip-dark-theme(positive);
    }
    .p-chip--caution {
      @include vf-chip-light-theme(caution);
    }
    .p-chip--caution.is-dark {
      @include vf-chip-dark-theme(caution);
    }
    .p-chip--negative {
      @include vf-chip-light-theme(negative);
    }
    .p-chip--negative.is-dark {
      @include vf-chip-dark-theme(negative);
    }
    .p-chip--information {
      @include vf-chip-light-theme(information);
    }
    .p-chip--information.is-dark {
      @include vf-chip-dark-theme(information);
    }
  }
}

@mixin vf-chip-theme($type, $background, $border, $value-color, $lead-color) {
  $color-background: null;
  $color-border: null;

  @if (map-has-key($background, $type)) {
    $color-background: map-get($background, $type);
    $color-border: map-get($border, $type);
  } @else {
    $color-background: map-get($background, neutral);
    $color-border: map-get($background, neutral);
  }

  background-color: $color-background;
  border: 1px solid $color-border;

  .p-chip__value {
    color: $value-color;
  }
  .p-chip__lead {
    color: $lead-color;
  }
  .p-chip__lead + .p-chip__value::before {
    color: $lead-color;
  }
}

@mixin vf-chip-light-theme($type: neutral) {
  @include vf-chip-theme($type, $colors-light-theme--tinted-backgrounds, $colors-light-theme--tinted-borders, $colors--light-theme--text-default, $colors--light-theme--text-muted);
}

@mixin vf-chip-dark-theme($type: neutral) {
  @include vf-chip-theme($type, $colors-dark-theme--tinted-backgrounds, $colors-dark-theme--tinted-borders, $colors--dark-theme--text-default, $colors--dark-theme--text-muted);
}

@mixin vf-chip-default {
  .p-chip {
    @extend %vf-chip;
  }
}

@mixin vf-chip-positive {
  .p-chip--positive {
    @extend %vf-chip;
  }
}

@mixin vf-chip-caution {
  .p-chip--caution {
    @extend %vf-chip;
  }
}

@mixin vf-chip-negative {
  .p-chip--negative {
    @extend %vf-chip;
  }
}

@mixin vf-chip-information {
  .p-chip--information {
    @extend %vf-chip;
  }
}
