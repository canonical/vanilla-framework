map $http_x_forwarded_proto $url_prefix {
     default $scheme://$http_host;
     https https://$http_host;
     http http://$http_host;
}

map $uri $target {
    include redirects.map;
}

server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    # Log to stdout
    access_log /dev/stdout;
    error_log /dev/stderr info;

    root /srv;

    index index.html;

    # Show 404 page
    error_page 404 /404.html;

    # Show revision-tag
    add_header x-vcs-revision ~REVISION_ID~ always;
    add_header x-hostname $hostname always;

    # Apply redirects from file
    if ($target ~* '://') {
        rewrite ^ $target redirect;
    }
    if ($target) {
        rewrite ^ $url_prefix$target redirect;
    }

    # Remove index or index.html from URIs
    if ($request_uri ~ ^.*/index$) {
        rewrite ^(.*/)index$ $url_prefix$1 permanent;
    }
    if ($request_uri ~ ^.*/index.html$) {
        rewrite ^(.*/)index.html$ $url_prefix$1 permanent;
    }

    # Remove .html from URIs
    if ($request_uri ~ ^.*\.html$) {
        rewrite ^(.*)\.html$ $url_prefix$1 permanent;
    }

    # Remove slashes form URIs if it's not a directory
    if (!-d $request_filename) {
        rewrite ^(.*)/$ $url_prefix$1 permanent;
    }

    # Add slashes from URIs if it's a directory
    if (-d $request_filename) {
        rewrite ^(.*[^/])$ $url_prefix$1/ permanent;
    }

    try_files $uri $uri.html $uri/ =404;
}
