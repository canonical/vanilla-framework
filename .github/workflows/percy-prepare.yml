# This workflow is triggered by the `pr-percy-prepare` workflows.
# It checks out the SCSS/example markup changes and uploads them to Github as an artifact.
name: "Prepare Percy build"

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: number
      repository:
        required: true
        type: string
      commitsh:
        required: true
        type: string

jobs:
  copy_artifact:
    name: Copy changed files to GHA artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            templates/docs/examples/
            templates/_macros/
            scss/
            build/scss/
          ref: ${{ github.event.inputs.commitsh }}
          repository: ${{ github.event.inputs.repository }}

      - name: Populate artifact directory
        run: |
          # Create needed directories so `cp` doesn't fail
          mkdir -p artifact
          mkdir -p templates/docs/examples/
          mkdir -p templates/_macros/
          mkdir -p templates/macros/

          echo "Contents before copying to artifact"
          tree .

          # underscore-prefixed directories are ignored by GH artifacts, so we need to copy to a non-prefixed directory
          cp -R templates/_macros/. templates/macros/

          cp -R templates/docs/examples/ templates/macros/ scss/ build/scss/ artifact/


      # Archive the PR number associated with this workflow since it won't be available in the base workflow context
      # https://github.com/orgs/community/discussions/25220
      - name: Archive PR data
        if: github.event_name=='pull_request'
        working-directory: artifact
        run: |
          echo ${{ inputs.pr_number }} > pr_num.txt
          echo ${{ inputs.commitsh }} > pr_head_sha.txt
          echo "Contents of artifact"
          tree .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "percy-testing-web-artifact"
          path: artifact/*
